{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {

		"minecraftUser": {
			"type": "string",
			"metadata": {
				"description": "Your Minecraft user name"
			}
		},
		"difficulty": {
			"type": "string",
			"defaultValue": "1",
			"allowedValues": [
				"0",
				"1",
				"2",
				"3"
			],
			"metadata": {
				"description": "0 - Peaceful, 1 - Easy, 2 - Normal, 3 - Hard"
			}
		},
		"level-name": {
			"type": "string",
			"defaultValue": "world",
			"metadata": {
				"description": "Name of your world"
			}
		},
		"gamemode": {
			"type": "string",
			"defaultValue": "0",
			"allowedValues": [
				"0",
				"1",
				"2",
				"3"
			],
			"metadata": {
				"description": "0 - Survival, 1 - Creative, 2 - Adventure, 3 - Spectator"
			}
		},
		"white-list": {
			"type": "string",
			"defaultValue": "false",
			"allowedValues": [
				"false",
				"true"
			],
			"metadata": {
				"description": "Only ops and whitelisted players can connect"
			}
		},
		"enable-command-block": {
			"type": "string",
			"defaultValue": "false",
			"allowedValues": [
				"false",
				"true"
			],
			"metadata": {
				"description": "enable command blocks"
			}
		},
		"spawn-monsters": {
			"type": "string",
			"defaultValue": "true",
			"allowedValues": [
				"false",
				"true"
			],
			"metadata": {
				"description": "Enables monster spawning"
			}
		},
		"generate-structures": {
			"type": "string",
			"defaultValue": "true",
			"allowedValues": [
				"false",
				"true"
			],
			"metadata": {
				"description": "Generates villages etc."
			}
		},
		"level-seed": {
			"type": "string",
			"defaultValue": " ",
			"metadata": {
				"description": "Add a seed for your world"
			}
		},
		"dnsNameForPublicIP": {
			"defaultValue": "muirgang",
			"type": "string",
			"metadata": {
				"description": "Put a unique DNS Name for the Public IP used to access the Virtual Machine."
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"virtualMachineSize": {
			"type": "string",
			"defaultValue": "Standard_A1_v2",
			"allowedValues": [
				"Standard_A1_v2",
				"Standard_A2_v2",
				"Standard_D1_v2",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_B1ls",
				"Standard_B1s",
				"Standard_B1ms"
			]
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Admin user name you will use to log on to the Virtual Machine."
			}
		},
		"adminPasswordOrKey": {
			"type": "securestring",
			"metadata": {
				"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
			}
		},
		"authenticationType": {
			"type": "string",
			"defaultValue": "sshPublicKey",
			"allowedValues": [
				"sshPublicKey",
				"password"
			]
		}
	},
	"functions": [],
	"variables": {
		"imagePublisher": "Canonical",
		"imageOffer": "UbuntuServer",
		"ubuntuOSVersion": "18.04-LTS",
		"vmName": "minecraftvm",
		"lowerCaseDNSName": "[toLower(parameters('dnsNameForPublicIP'))]",
		"networkSecurityGroupName": "[concat(variables('lowerCaseDNSName'), 'nsg')]",
		"publicIPAddressName": "minecraftpublicip",
		"publicIPAddressType": "Dynamic",
		"virtualNetworkName": "minecraftvnet",
		"nicName": "minecraftvmnic",
		"addressPrefix": "10.0.0.0/16",
		"subnetName": "subnet",
		"subnetPrefix": "10.0.0.0/24",
		"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
		"linuxConfiguration": {
			"disablePasswordAuthentication": true,
			"ssh": {
				"publicKey": [
					{
						"path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
						"keyData": "[parameters('adminPasswordOrKey')]"
					}
				]
			}
		}

	},
	"resources": [
		{
			"name": "[variables('networkSecurityGroupName')]",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "ssh",
						"properties": {
							"description": "SSH Port",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					},
					{
						"name": "minecraft",
						"properties": {
							"description": "Minecraft server port",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "25565",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 101,
							"direction": "Inbound"
						}

					}
				]
			}
		},
		{
			"name": "[variables('publicIPAddressName')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2020-05-01",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "[variables('publicIPAddressName')]"
			},
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[variables('lowerCaseDNSName')]"
				}
			}
		},
		{
			"name": "[variables('virtualNetworkName')]",
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2020-05-01",
			"location": "[parameters('location')]",
			"dependsOn": [ "[concat('Microsoft.Network/networkSecurityGroups/',variables('networkSecurityGroupName'))]" ],
			"tags": {
				"displayName": "[variables('virtualNetworkName')]"

			},
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix')]",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupName'))]"
							}
						}
					}
				]
			}
		},
		{
			"name": "[variables('nicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-05-01",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "[variables('nicName')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressName'))]",
				"[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipConfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2019-07-01",
			"name": "[variables('vmName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('virtualMachineSize')]"
				},
				"osProfile": {
					"computerName": "[variables('vmName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPasswordOrKey')]",
					"linuxConfiguration": "[if(equals(parameters('authenticationType'),'password'),json('null'),variables('linuxConfiguration'))]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[variables('ubuntuOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"caching": "ReadWrite",
						"createOption": "FromImage",
						"diskSizeGB": 50
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmName'),'/newuserscript')]",
			"apiVersion": "2019-07-01",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/',variables('vmName'))]"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"https://raw.githubusercontent.com/erikkmuir/azrue-minecraft-vm/create-vm/install_minecraft.sh"
					],
					"commandToExecute": "[concat('bash install_minecraft.sh ', parameters('minecraftUser'), ' ', parameters('difficulty'), ' ', parameters('level-name'), ' ', parameters('gamemode'), ' ', parameters('white-list'), ' ', parameters('enable-command-block'), ' ', parameters('spawn-monsters'), ' ', parameters('generate-structures'), ' ', parameters('level-seed'))]"
				},	
				"protectedSettings": {}
			}
		}
	],
	"outputs": {
		"InstallMinecraftSh": {
			"type": "string",
			"value": "[concat('bash install_minecraft.sh ', parameters('minecraftUser'), ' ', parameters('difficulty'), ' ', parameters('level-name'), ' ', parameters('gamemode'), ' ', parameters('white-list'), ' ', parameters('enable-command-block'), ' ', parameters('spawn-monsters'), ' ', parameters('generate-structures'), ' ', parameters('level-seed'))]"
		}
	}
}